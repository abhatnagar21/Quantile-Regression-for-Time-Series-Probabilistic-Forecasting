%matplotlib inline
from matplotlib import pyplot as plt
import pandas as pd
import numpy as np
import logging
import warnings
from neuralprophet import NeuralProphet, set_log_level

logging.getLogger('prophet').setLevel(logging.ERROR)
warnings.filterwarnings("ignore")
# Load data
data = pd.read_csv('bike_sharing_daily.csv')

# Convert date column to datetime
data["ds"] = pd.to_datetime(data["dteday"])

# Create line plot of sales data
plt.plot(data['ds'], data["cnt"])
plt.xlabel("Date")
plt.ylabel("Count")
plt.show()

# Prepare data for NeuralProphet
df = data[['ds', 'cnt']]
df.columns = ['ds', 'y']
# Define quantiles for prediction intervals
quantile_list = [0.05, 0.1, 0.5, 0.9, 0.95]

# Initialize NeuralProphet model
m = NeuralProphet(
    quantiles=quantile_list,
    yearly_seasonality=True,
    weekly_seasonality=True,
    daily_seasonality=False
)

# Add country holidays to the model
m = m.add_country_holidays("US")

# Set plotting backend to matplotlib
m.set_plotting_backend("matplotlib")
# Split data into training and test sets
df_train, df_test = m.split_df(df, valid_p=0.2)

# Fit the model
metrics = m.fit(df_train, validation_df=df_test, progress="bar")
print(metrics.tail())
# Create a future dataframe for predictions
future = m.make_future_dataframe(df, periods=365)  # Adjust the periods as needed

# Generate the forecast
forecast = m.predict(future)
print(forecast.tail())
m.plot(forecast, plotting_backend="matplotlib")
#dataset=https://www.kaggle.com/datasets/contactprad/bike-share-daily-data
